// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// prettier-ignore
// @ts-ignore
import { DateResolver as Date } from 'graphql-scalars';
// prettier-ignore
// @ts-ignore
import { GraphQLID as ID } from 'graphql';
// prettier-ignore
// @ts-ignore
import { ArgsType, Field as TypeGraphQLField, Float, InputType as TypeGraphQLInputType, Int } from 'type-graphql';
// prettier-ignore
// @ts-ignore
import { registerEnumType, GraphQLISODateTime as DateTime } from "type-graphql";

// prettier-ignore
// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require('graphql-type-json');
// prettier-ignore
// @ts-ignore
import { BaseWhereInput, JsonObject, PaginationArgs, DateOnlyString, DateTimeString } from 'warthog';

import { Network } from "../src/modules/block/block.model";
// @ts-ignore
import { Category } from "../src/modules/category/category.model";
// @ts-ignore
import { Channel } from "../src/modules/channel/channel.model";
// @ts-ignore
import { ClassEntity } from "../src/modules/class-entity/class-entity.model";
// @ts-ignore
import { HttpMediaLocation } from "../src/modules/http-media-location/http-media-location.model";
// @ts-ignore
import { JoystreamMediaLocation } from "../src/modules/joystream-media-location/joystream-media-location.model";
// @ts-ignore
import { KnownLicense } from "../src/modules/known-license/known-license.model";
// @ts-ignore
import { Language } from "../src/modules/language/language.model";
// @ts-ignore
import { Member } from "../src/modules/member/member.model";
// @ts-ignore
import { UserDefinedLicense } from "../src/modules/user-defined-license/user-defined-license.model";
// @ts-ignore
import { Video } from "../src/modules/video/video.model";
// @ts-ignore
import { VideoMedia } from "../src/modules/video-media/video-media.model";
// @ts-ignore
import { Block } from "../src/modules/block/block.model";
// @ts-ignore
import { VideoMediaEncoding } from "../src/modules/video-media-encoding/video-media-encoding.model";

export enum CategoryOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  description_ASC = "description_ASC",
  description_DESC = "description_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(CategoryOrderByEnum, {
  name: "CategoryOrderByInput"
});

@TypeGraphQLInputType()
export class CategoryWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  name_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_contains?: string;

  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  description_eq?: string;

  @TypeGraphQLField({ nullable: true })
  description_contains?: string;

  @TypeGraphQLField({ nullable: true })
  description_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  description_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  description_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class CategoryWhereUniqueInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id?: string;

  @TypeGraphQLField(() => String, { nullable: true })
  name?: string;
}

@TypeGraphQLInputType()
export class CategoryCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField({ nullable: true })
  description?: string;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class CategoryUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  description?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class CategoryWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => CategoryWhereInput, { nullable: true })
  where?: CategoryWhereInput;

  @TypeGraphQLField(() => CategoryOrderByEnum, { nullable: true })
  orderBy?: CategoryOrderByEnum;
}

@ArgsType()
export class CategoryCreateManyArgs {
  @TypeGraphQLField(() => [CategoryCreateInput])
  data!: CategoryCreateInput[];
}

@ArgsType()
export class CategoryUpdateArgs {
  @TypeGraphQLField() data!: CategoryUpdateInput;
  @TypeGraphQLField() where!: CategoryWhereUniqueInput;
}

export enum ChannelOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  title_ASC = "title_ASC",
  title_DESC = "title_DESC",

  description_ASC = "description_ASC",
  description_DESC = "description_DESC",

  coverPhotoUrl_ASC = "coverPhotoUrl_ASC",
  coverPhotoUrl_DESC = "coverPhotoUrl_DESC",

  avatarPhotoUrl_ASC = "avatarPhotoUrl_ASC",
  avatarPhotoUrl_DESC = "avatarPhotoUrl_DESC",

  isPublic_ASC = "isPublic_ASC",
  isPublic_DESC = "isPublic_DESC",

  isCurated_ASC = "isCurated_ASC",
  isCurated_DESC = "isCurated_DESC",

  languageId_ASC = "languageId_ASC",
  languageId_DESC = "languageId_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(ChannelOrderByEnum, {
  name: "ChannelOrderByInput"
});

@TypeGraphQLInputType()
export class ChannelWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  title_eq?: string;

  @TypeGraphQLField({ nullable: true })
  title_contains?: string;

  @TypeGraphQLField({ nullable: true })
  title_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  title_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  title_in?: string[];

  @TypeGraphQLField({ nullable: true })
  description_eq?: string;

  @TypeGraphQLField({ nullable: true })
  description_contains?: string;

  @TypeGraphQLField({ nullable: true })
  description_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  description_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  description_in?: string[];

  @TypeGraphQLField({ nullable: true })
  coverPhotoUrl_eq?: string;

  @TypeGraphQLField({ nullable: true })
  coverPhotoUrl_contains?: string;

  @TypeGraphQLField({ nullable: true })
  coverPhotoUrl_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  coverPhotoUrl_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  coverPhotoUrl_in?: string[];

  @TypeGraphQLField({ nullable: true })
  avatarPhotoUrl_eq?: string;

  @TypeGraphQLField({ nullable: true })
  avatarPhotoUrl_contains?: string;

  @TypeGraphQLField({ nullable: true })
  avatarPhotoUrl_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  avatarPhotoUrl_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  avatarPhotoUrl_in?: string[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  isPublic_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  isPublic_in?: Boolean[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  isCurated_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  isCurated_in?: Boolean[];

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  languageId_in?: number[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class ChannelWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class ChannelCreateInput {
  @TypeGraphQLField()
  title!: string;

  @TypeGraphQLField()
  description!: string;

  @TypeGraphQLField()
  coverPhotoUrl!: string;

  @TypeGraphQLField()
  avatarPhotoUrl!: string;

  @TypeGraphQLField()
  isPublic!: boolean;

  @TypeGraphQLField()
  isCurated!: boolean;

  @TypeGraphQLField({ nullable: true })
  languageId?: number;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class ChannelUpdateInput {
  @TypeGraphQLField({ nullable: true })
  title?: string;

  @TypeGraphQLField({ nullable: true })
  description?: string;

  @TypeGraphQLField({ nullable: true })
  coverPhotoUrl?: string;

  @TypeGraphQLField({ nullable: true })
  avatarPhotoUrl?: string;

  @TypeGraphQLField({ nullable: true })
  isPublic?: boolean;

  @TypeGraphQLField({ nullable: true })
  isCurated?: boolean;

  @TypeGraphQLField({ nullable: true })
  languageId?: number;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class ChannelWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => ChannelWhereInput, { nullable: true })
  where?: ChannelWhereInput;

  @TypeGraphQLField(() => ChannelOrderByEnum, { nullable: true })
  orderBy?: ChannelOrderByEnum;
}

@ArgsType()
export class ChannelCreateManyArgs {
  @TypeGraphQLField(() => [ChannelCreateInput])
  data!: ChannelCreateInput[];
}

@ArgsType()
export class ChannelUpdateArgs {
  @TypeGraphQLField() data!: ChannelUpdateInput;
  @TypeGraphQLField() where!: ChannelWhereUniqueInput;
}

export enum ClassEntityOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  classId_ASC = "classId_ASC",
  classId_DESC = "classId_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(ClassEntityOrderByEnum, {
  name: "ClassEntityOrderByInput"
});

@TypeGraphQLInputType()
export class ClassEntityWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  classId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  classId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  classId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  classId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  classId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  classId_in?: number[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class ClassEntityWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class ClassEntityCreateInput {
  @TypeGraphQLField()
  classId!: number;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class ClassEntityUpdateInput {
  @TypeGraphQLField({ nullable: true })
  classId?: number;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class ClassEntityWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => ClassEntityWhereInput, { nullable: true })
  where?: ClassEntityWhereInput;

  @TypeGraphQLField(() => ClassEntityOrderByEnum, { nullable: true })
  orderBy?: ClassEntityOrderByEnum;
}

@ArgsType()
export class ClassEntityCreateManyArgs {
  @TypeGraphQLField(() => [ClassEntityCreateInput])
  data!: ClassEntityCreateInput[];
}

@ArgsType()
export class ClassEntityUpdateArgs {
  @TypeGraphQLField() data!: ClassEntityUpdateInput;
  @TypeGraphQLField() where!: ClassEntityWhereUniqueInput;
}

export enum HttpMediaLocationOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  url_ASC = "url_ASC",
  url_DESC = "url_DESC",

  port_ASC = "port_ASC",
  port_DESC = "port_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(HttpMediaLocationOrderByEnum, {
  name: "HttpMediaLocationOrderByInput"
});

@TypeGraphQLInputType()
export class HttpMediaLocationWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  url_eq?: string;

  @TypeGraphQLField({ nullable: true })
  url_contains?: string;

  @TypeGraphQLField({ nullable: true })
  url_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  url_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  url_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  port_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  port_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  port_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  port_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  port_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  port_in?: number[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class HttpMediaLocationWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class HttpMediaLocationCreateInput {
  @TypeGraphQLField()
  url!: string;

  @TypeGraphQLField({ nullable: true })
  port?: number;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class HttpMediaLocationUpdateInput {
  @TypeGraphQLField({ nullable: true })
  url?: string;

  @TypeGraphQLField({ nullable: true })
  port?: number;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class HttpMediaLocationWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => HttpMediaLocationWhereInput, { nullable: true })
  where?: HttpMediaLocationWhereInput;

  @TypeGraphQLField(() => HttpMediaLocationOrderByEnum, { nullable: true })
  orderBy?: HttpMediaLocationOrderByEnum;
}

@ArgsType()
export class HttpMediaLocationCreateManyArgs {
  @TypeGraphQLField(() => [HttpMediaLocationCreateInput])
  data!: HttpMediaLocationCreateInput[];
}

@ArgsType()
export class HttpMediaLocationUpdateArgs {
  @TypeGraphQLField() data!: HttpMediaLocationUpdateInput;
  @TypeGraphQLField() where!: HttpMediaLocationWhereUniqueInput;
}

export enum JoystreamMediaLocationOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  dataObjectId_ASC = "dataObjectId_ASC",
  dataObjectId_DESC = "dataObjectId_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(JoystreamMediaLocationOrderByEnum, {
  name: "JoystreamMediaLocationOrderByInput"
});

@TypeGraphQLInputType()
export class JoystreamMediaLocationWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  dataObjectId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  dataObjectId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  dataObjectId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  dataObjectId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  dataObjectId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class JoystreamMediaLocationWhereUniqueInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id?: string;

  @TypeGraphQLField(() => String, { nullable: true })
  dataObjectId?: string;
}

@TypeGraphQLInputType()
export class JoystreamMediaLocationCreateInput {
  @TypeGraphQLField()
  dataObjectId!: string;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class JoystreamMediaLocationUpdateInput {
  @TypeGraphQLField({ nullable: true })
  dataObjectId?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class JoystreamMediaLocationWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => JoystreamMediaLocationWhereInput, { nullable: true })
  where?: JoystreamMediaLocationWhereInput;

  @TypeGraphQLField(() => JoystreamMediaLocationOrderByEnum, { nullable: true })
  orderBy?: JoystreamMediaLocationOrderByEnum;
}

@ArgsType()
export class JoystreamMediaLocationCreateManyArgs {
  @TypeGraphQLField(() => [JoystreamMediaLocationCreateInput])
  data!: JoystreamMediaLocationCreateInput[];
}

@ArgsType()
export class JoystreamMediaLocationUpdateArgs {
  @TypeGraphQLField() data!: JoystreamMediaLocationUpdateInput;
  @TypeGraphQLField() where!: JoystreamMediaLocationWhereUniqueInput;
}

export enum KnownLicenseOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  description_ASC = "description_ASC",
  description_DESC = "description_DESC",

  url_ASC = "url_ASC",
  url_DESC = "url_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(KnownLicenseOrderByEnum, {
  name: "KnownLicenseOrderByInput"
});

@TypeGraphQLInputType()
export class KnownLicenseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;

  @TypeGraphQLField({ nullable: true })
  code_contains?: string;

  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField({ nullable: true })
  name_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_contains?: string;

  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  description_eq?: string;

  @TypeGraphQLField({ nullable: true })
  description_contains?: string;

  @TypeGraphQLField({ nullable: true })
  description_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  description_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  description_in?: string[];

  @TypeGraphQLField({ nullable: true })
  url_eq?: string;

  @TypeGraphQLField({ nullable: true })
  url_contains?: string;

  @TypeGraphQLField({ nullable: true })
  url_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  url_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  url_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class KnownLicenseWhereUniqueInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id?: string;

  @TypeGraphQLField(() => String, { nullable: true })
  code?: string;
}

@TypeGraphQLInputType()
export class KnownLicenseCreateInput {
  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  description?: string;

  @TypeGraphQLField({ nullable: true })
  url?: string;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class KnownLicenseUpdateInput {
  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  description?: string;

  @TypeGraphQLField({ nullable: true })
  url?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class KnownLicenseWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => KnownLicenseWhereInput, { nullable: true })
  where?: KnownLicenseWhereInput;

  @TypeGraphQLField(() => KnownLicenseOrderByEnum, { nullable: true })
  orderBy?: KnownLicenseOrderByEnum;
}

@ArgsType()
export class KnownLicenseCreateManyArgs {
  @TypeGraphQLField(() => [KnownLicenseCreateInput])
  data!: KnownLicenseCreateInput[];
}

@ArgsType()
export class KnownLicenseUpdateArgs {
  @TypeGraphQLField() data!: KnownLicenseUpdateInput;
  @TypeGraphQLField() where!: KnownLicenseWhereUniqueInput;
}

export enum LanguageOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(LanguageOrderByEnum, {
  name: "LanguageOrderByInput"
});

@TypeGraphQLInputType()
export class LanguageWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  name_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_contains?: string;

  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;

  @TypeGraphQLField({ nullable: true })
  code_contains?: string;

  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class LanguageWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class LanguageCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class LanguageUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class LanguageWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => LanguageWhereInput, { nullable: true })
  where?: LanguageWhereInput;

  @TypeGraphQLField(() => LanguageOrderByEnum, { nullable: true })
  orderBy?: LanguageOrderByEnum;
}

@ArgsType()
export class LanguageCreateManyArgs {
  @TypeGraphQLField(() => [LanguageCreateInput])
  data!: LanguageCreateInput[];
}

@ArgsType()
export class LanguageUpdateArgs {
  @TypeGraphQLField() data!: LanguageUpdateInput;
  @TypeGraphQLField() where!: LanguageWhereUniqueInput;
}

export enum MemberOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  handle_ASC = "handle_ASC",
  handle_DESC = "handle_DESC",

  avatarUri_ASC = "avatarUri_ASC",
  avatarUri_DESC = "avatarUri_DESC",

  about_ASC = "about_ASC",
  about_DESC = "about_DESC",

  registeredAtBlock_ASC = "registeredAtBlock_ASC",
  registeredAtBlock_DESC = "registeredAtBlock_DESC",

  controllerAccount_ASC = "controllerAccount_ASC",
  controllerAccount_DESC = "controllerAccount_DESC",

  rootAccount_ASC = "rootAccount_ASC",
  rootAccount_DESC = "rootAccount_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(MemberOrderByEnum, {
  name: "MemberOrderByInput"
});

@TypeGraphQLInputType()
export class MemberWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  handle_eq?: string;

  @TypeGraphQLField({ nullable: true })
  handle_contains?: string;

  @TypeGraphQLField({ nullable: true })
  handle_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  handle_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  handle_in?: string[];

  @TypeGraphQLField({ nullable: true })
  avatarUri_eq?: string;

  @TypeGraphQLField({ nullable: true })
  avatarUri_contains?: string;

  @TypeGraphQLField({ nullable: true })
  avatarUri_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  avatarUri_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  avatarUri_in?: string[];

  @TypeGraphQLField({ nullable: true })
  about_eq?: string;

  @TypeGraphQLField({ nullable: true })
  about_contains?: string;

  @TypeGraphQLField({ nullable: true })
  about_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  about_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  about_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  registeredAtBlock_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  registeredAtBlock_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  registeredAtBlock_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  registeredAtBlock_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  registeredAtBlock_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  registeredAtBlock_in?: number[];

  @TypeGraphQLField({ nullable: true })
  controllerAccount_eq?: string;

  @TypeGraphQLField({ nullable: true })
  controllerAccount_contains?: string;

  @TypeGraphQLField({ nullable: true })
  controllerAccount_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  controllerAccount_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  controllerAccount_in?: string[];

  @TypeGraphQLField({ nullable: true })
  rootAccount_eq?: string;

  @TypeGraphQLField({ nullable: true })
  rootAccount_contains?: string;

  @TypeGraphQLField({ nullable: true })
  rootAccount_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  rootAccount_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  rootAccount_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class MemberWhereUniqueInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id?: string;

  @TypeGraphQLField(() => String, { nullable: true })
  handle?: string;
}

@TypeGraphQLInputType()
export class MemberCreateInput {
  @TypeGraphQLField({ nullable: true })
  handle?: string;

  @TypeGraphQLField({ nullable: true })
  avatarUri?: string;

  @TypeGraphQLField({ nullable: true })
  about?: string;

  @TypeGraphQLField()
  registeredAtBlock!: number;

  @TypeGraphQLField()
  controllerAccount!: string;

  @TypeGraphQLField()
  rootAccount!: string;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class MemberUpdateInput {
  @TypeGraphQLField({ nullable: true })
  handle?: string;

  @TypeGraphQLField({ nullable: true })
  avatarUri?: string;

  @TypeGraphQLField({ nullable: true })
  about?: string;

  @TypeGraphQLField({ nullable: true })
  registeredAtBlock?: number;

  @TypeGraphQLField({ nullable: true })
  controllerAccount?: string;

  @TypeGraphQLField({ nullable: true })
  rootAccount?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class MemberWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => MemberWhereInput, { nullable: true })
  where?: MemberWhereInput;

  @TypeGraphQLField(() => MemberOrderByEnum, { nullable: true })
  orderBy?: MemberOrderByEnum;
}

@ArgsType()
export class MemberCreateManyArgs {
  @TypeGraphQLField(() => [MemberCreateInput])
  data!: MemberCreateInput[];
}

@ArgsType()
export class MemberUpdateArgs {
  @TypeGraphQLField() data!: MemberUpdateInput;
  @TypeGraphQLField() where!: MemberWhereUniqueInput;
}

export enum UserDefinedLicenseOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  content_ASC = "content_ASC",
  content_DESC = "content_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(UserDefinedLicenseOrderByEnum, {
  name: "UserDefinedLicenseOrderByInput"
});

@TypeGraphQLInputType()
export class UserDefinedLicenseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  content_eq?: string;

  @TypeGraphQLField({ nullable: true })
  content_contains?: string;

  @TypeGraphQLField({ nullable: true })
  content_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  content_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  content_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class UserDefinedLicenseWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class UserDefinedLicenseCreateInput {
  @TypeGraphQLField()
  content!: string;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class UserDefinedLicenseUpdateInput {
  @TypeGraphQLField({ nullable: true })
  content?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class UserDefinedLicenseWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => UserDefinedLicenseWhereInput, { nullable: true })
  where?: UserDefinedLicenseWhereInput;

  @TypeGraphQLField(() => UserDefinedLicenseOrderByEnum, { nullable: true })
  orderBy?: UserDefinedLicenseOrderByEnum;
}

@ArgsType()
export class UserDefinedLicenseCreateManyArgs {
  @TypeGraphQLField(() => [UserDefinedLicenseCreateInput])
  data!: UserDefinedLicenseCreateInput[];
}

@ArgsType()
export class UserDefinedLicenseUpdateArgs {
  @TypeGraphQLField() data!: UserDefinedLicenseUpdateInput;
  @TypeGraphQLField() where!: UserDefinedLicenseWhereUniqueInput;
}

export enum VideoOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  channelId_ASC = "channelId_ASC",
  channelId_DESC = "channelId_DESC",

  categoryId_ASC = "categoryId_ASC",
  categoryId_DESC = "categoryId_DESC",

  title_ASC = "title_ASC",
  title_DESC = "title_DESC",

  description_ASC = "description_ASC",
  description_DESC = "description_DESC",

  duration_ASC = "duration_ASC",
  duration_DESC = "duration_DESC",

  skippableIntroDuration_ASC = "skippableIntroDuration_ASC",
  skippableIntroDuration_DESC = "skippableIntroDuration_DESC",

  thumbnailUrl_ASC = "thumbnailUrl_ASC",
  thumbnailUrl_DESC = "thumbnailUrl_DESC",

  languageId_ASC = "languageId_ASC",
  languageId_DESC = "languageId_DESC",

  videoMediaId_ASC = "videoMediaId_ASC",
  videoMediaId_DESC = "videoMediaId_DESC",

  hasMarketing_ASC = "hasMarketing_ASC",
  hasMarketing_DESC = "hasMarketing_DESC",

  publishedBeforeJoystream_ASC = "publishedBeforeJoystream_ASC",
  publishedBeforeJoystream_DESC = "publishedBeforeJoystream_DESC",

  isPublic_ASC = "isPublic_ASC",
  isPublic_DESC = "isPublic_DESC",

  isCurated_ASC = "isCurated_ASC",
  isCurated_DESC = "isCurated_DESC",

  isExplicit_ASC = "isExplicit_ASC",
  isExplicit_DESC = "isExplicit_DESC",

  licenseId_ASC = "licenseId_ASC",
  licenseId_DESC = "licenseId_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(VideoOrderByEnum, {
  name: "VideoOrderByInput"
});

@TypeGraphQLInputType()
export class VideoWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  channelId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  channelId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  channelId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  channelId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  channelId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  channelId_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  categoryId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  categoryId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  categoryId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  categoryId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  categoryId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  categoryId_in?: number[];

  @TypeGraphQLField({ nullable: true })
  title_eq?: string;

  @TypeGraphQLField({ nullable: true })
  title_contains?: string;

  @TypeGraphQLField({ nullable: true })
  title_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  title_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  title_in?: string[];

  @TypeGraphQLField({ nullable: true })
  description_eq?: string;

  @TypeGraphQLField({ nullable: true })
  description_contains?: string;

  @TypeGraphQLField({ nullable: true })
  description_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  description_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  description_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  duration_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  duration_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  duration_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  duration_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  duration_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  duration_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  skippableIntroDuration_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  skippableIntroDuration_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  skippableIntroDuration_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  skippableIntroDuration_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  skippableIntroDuration_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  skippableIntroDuration_in?: number[];

  @TypeGraphQLField({ nullable: true })
  thumbnailUrl_eq?: string;

  @TypeGraphQLField({ nullable: true })
  thumbnailUrl_contains?: string;

  @TypeGraphQLField({ nullable: true })
  thumbnailUrl_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  thumbnailUrl_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  thumbnailUrl_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  languageId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  languageId_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  videoMediaId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  videoMediaId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  videoMediaId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  videoMediaId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  videoMediaId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  videoMediaId_in?: number[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  hasMarketing_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  hasMarketing_in?: Boolean[];

  @TypeGraphQLField(() => Int, { nullable: true })
  publishedBeforeJoystream_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publishedBeforeJoystream_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publishedBeforeJoystream_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publishedBeforeJoystream_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  publishedBeforeJoystream_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  publishedBeforeJoystream_in?: number[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  isPublic_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  isPublic_in?: Boolean[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  isCurated_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  isCurated_in?: Boolean[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  isExplicit_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  isExplicit_in?: Boolean[];

  @TypeGraphQLField(() => Int, { nullable: true })
  licenseId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  licenseId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  licenseId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  licenseId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  licenseId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  licenseId_in?: number[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class VideoWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class VideoCreateInput {
  @TypeGraphQLField()
  channelId!: number;

  @TypeGraphQLField()
  categoryId!: number;

  @TypeGraphQLField()
  title!: string;

  @TypeGraphQLField()
  description!: string;

  @TypeGraphQLField()
  duration!: number;

  @TypeGraphQLField({ nullable: true })
  skippableIntroDuration?: number;

  @TypeGraphQLField()
  thumbnailUrl!: string;

  @TypeGraphQLField({ nullable: true })
  languageId?: number;

  @TypeGraphQLField()
  videoMediaId!: number;

  @TypeGraphQLField({ nullable: true })
  hasMarketing?: boolean;

  @TypeGraphQLField({ nullable: true })
  publishedBeforeJoystream?: number;

  @TypeGraphQLField()
  isPublic!: boolean;

  @TypeGraphQLField()
  isCurated!: boolean;

  @TypeGraphQLField()
  isExplicit!: boolean;

  @TypeGraphQLField()
  licenseId!: number;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class VideoUpdateInput {
  @TypeGraphQLField({ nullable: true })
  channelId?: number;

  @TypeGraphQLField({ nullable: true })
  categoryId?: number;

  @TypeGraphQLField({ nullable: true })
  title?: string;

  @TypeGraphQLField({ nullable: true })
  description?: string;

  @TypeGraphQLField({ nullable: true })
  duration?: number;

  @TypeGraphQLField({ nullable: true })
  skippableIntroDuration?: number;

  @TypeGraphQLField({ nullable: true })
  thumbnailUrl?: string;

  @TypeGraphQLField({ nullable: true })
  languageId?: number;

  @TypeGraphQLField({ nullable: true })
  videoMediaId?: number;

  @TypeGraphQLField({ nullable: true })
  hasMarketing?: boolean;

  @TypeGraphQLField({ nullable: true })
  publishedBeforeJoystream?: number;

  @TypeGraphQLField({ nullable: true })
  isPublic?: boolean;

  @TypeGraphQLField({ nullable: true })
  isCurated?: boolean;

  @TypeGraphQLField({ nullable: true })
  isExplicit?: boolean;

  @TypeGraphQLField({ nullable: true })
  licenseId?: number;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class VideoWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => VideoWhereInput, { nullable: true })
  where?: VideoWhereInput;

  @TypeGraphQLField(() => VideoOrderByEnum, { nullable: true })
  orderBy?: VideoOrderByEnum;
}

@ArgsType()
export class VideoCreateManyArgs {
  @TypeGraphQLField(() => [VideoCreateInput])
  data!: VideoCreateInput[];
}

@ArgsType()
export class VideoUpdateArgs {
  @TypeGraphQLField() data!: VideoUpdateInput;
  @TypeGraphQLField() where!: VideoWhereUniqueInput;
}

export enum VideoMediaOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  encodingId_ASC = "encodingId_ASC",
  encodingId_DESC = "encodingId_DESC",

  pixelWidth_ASC = "pixelWidth_ASC",
  pixelWidth_DESC = "pixelWidth_DESC",

  pixelHeight_ASC = "pixelHeight_ASC",
  pixelHeight_DESC = "pixelHeight_DESC",

  size_ASC = "size_ASC",
  size_DESC = "size_DESC",

  locationId_ASC = "locationId_ASC",
  locationId_DESC = "locationId_DESC",

  happenedInId_ASC = "happenedInId_ASC",
  happenedInId_DESC = "happenedInId_DESC"
}

registerEnumType(VideoMediaOrderByEnum, {
  name: "VideoMediaOrderByInput"
});

@TypeGraphQLInputType()
export class VideoMediaWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  encodingId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  encodingId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  encodingId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  encodingId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  encodingId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  encodingId_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelWidth_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelWidth_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelWidth_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelWidth_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelWidth_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  pixelWidth_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelHeight_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelHeight_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelHeight_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelHeight_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  pixelHeight_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  pixelHeight_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  size_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  size_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  size_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  size_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  size_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  size_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  locationId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  locationId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  locationId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  locationId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  locationId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  locationId_in?: number[];

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  happenedInId_in?: string[];
}

@TypeGraphQLInputType()
export class VideoMediaWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class VideoMediaCreateInput {
  @TypeGraphQLField()
  encodingId!: number;

  @TypeGraphQLField()
  pixelWidth!: number;

  @TypeGraphQLField()
  pixelHeight!: number;

  @TypeGraphQLField({ nullable: true })
  size?: number;

  @TypeGraphQLField()
  locationId!: number;

  @TypeGraphQLField(() => ID)
  happenedInId!: string;
}

@TypeGraphQLInputType()
export class VideoMediaUpdateInput {
  @TypeGraphQLField({ nullable: true })
  encodingId?: number;

  @TypeGraphQLField({ nullable: true })
  pixelWidth?: number;

  @TypeGraphQLField({ nullable: true })
  pixelHeight?: number;

  @TypeGraphQLField({ nullable: true })
  size?: number;

  @TypeGraphQLField({ nullable: true })
  locationId?: number;

  @TypeGraphQLField(() => ID, { nullable: true })
  happenedInId?: string;
}

@ArgsType()
export class VideoMediaWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => VideoMediaWhereInput, { nullable: true })
  where?: VideoMediaWhereInput;

  @TypeGraphQLField(() => VideoMediaOrderByEnum, { nullable: true })
  orderBy?: VideoMediaOrderByEnum;
}

@ArgsType()
export class VideoMediaCreateManyArgs {
  @TypeGraphQLField(() => [VideoMediaCreateInput])
  data!: VideoMediaCreateInput[];
}

@ArgsType()
export class VideoMediaUpdateArgs {
  @TypeGraphQLField() data!: VideoMediaUpdateInput;
  @TypeGraphQLField() where!: VideoMediaWhereUniqueInput;
}

export enum BlockOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  block_ASC = "block_ASC",
  block_DESC = "block_DESC",

  timestamp_ASC = "timestamp_ASC",
  timestamp_DESC = "timestamp_DESC",

  nework_ASC = "nework_ASC",
  nework_DESC = "nework_DESC"
}

registerEnumType(BlockOrderByEnum, {
  name: "BlockOrderByInput"
});

@TypeGraphQLInputType()
export class BlockWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  block_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  block_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  block_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  block_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  block_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  block_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  timestamp_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  timestamp_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  timestamp_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  timestamp_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  timestamp_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  timestamp_in?: number[];

  @TypeGraphQLField(() => Network, { nullable: true })
  nework_eq?: Network;

  @TypeGraphQLField(() => [Network], { nullable: true })
  nework_in?: Network[];
}

@TypeGraphQLInputType()
export class BlockWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class BlockCreateInput {
  @TypeGraphQLField()
  block!: number;

  @TypeGraphQLField()
  timestamp!: number;

  @TypeGraphQLField(() => Network)
  nework!: Network;
}

@TypeGraphQLInputType()
export class BlockUpdateInput {
  @TypeGraphQLField({ nullable: true })
  block?: number;

  @TypeGraphQLField({ nullable: true })
  timestamp?: number;

  @TypeGraphQLField(() => Network, { nullable: true })
  nework?: Network;
}

@ArgsType()
export class BlockWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => BlockWhereInput, { nullable: true })
  where?: BlockWhereInput;

  @TypeGraphQLField(() => BlockOrderByEnum, { nullable: true })
  orderBy?: BlockOrderByEnum;
}

@ArgsType()
export class BlockCreateManyArgs {
  @TypeGraphQLField(() => [BlockCreateInput])
  data!: BlockCreateInput[];
}

@ArgsType()
export class BlockUpdateArgs {
  @TypeGraphQLField() data!: BlockUpdateInput;
  @TypeGraphQLField() where!: BlockWhereUniqueInput;
}

export enum VideoMediaEncodingOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC"
}

registerEnumType(VideoMediaEncodingOrderByEnum, {
  name: "VideoMediaEncodingOrderByInput"
});

@TypeGraphQLInputType()
export class VideoMediaEncodingWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  name_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_contains?: string;

  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];
}

@TypeGraphQLInputType()
export class VideoMediaEncodingWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class VideoMediaEncodingCreateInput {
  @TypeGraphQLField()
  name!: string;
}

@TypeGraphQLInputType()
export class VideoMediaEncodingUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;
}

@ArgsType()
export class VideoMediaEncodingWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => VideoMediaEncodingWhereInput, { nullable: true })
  where?: VideoMediaEncodingWhereInput;

  @TypeGraphQLField(() => VideoMediaEncodingOrderByEnum, { nullable: true })
  orderBy?: VideoMediaEncodingOrderByEnum;
}

@ArgsType()
export class VideoMediaEncodingCreateManyArgs {
  @TypeGraphQLField(() => [VideoMediaEncodingCreateInput])
  data!: VideoMediaEncodingCreateInput[];
}

@ArgsType()
export class VideoMediaEncodingUpdateArgs {
  @TypeGraphQLField() data!: VideoMediaEncodingUpdateInput;
  @TypeGraphQLField() where!: VideoMediaEncodingWhereUniqueInput;
}
